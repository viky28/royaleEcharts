/**
 * Generated by Apache Royale Compiler from org/apache/royale/core/Bead.as
 * org.apache.royale.core.Bead
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.Bead');
/* Royale Dependency List: org.apache.royale.core.IStrand,org.apache.royale.events.IEventDispatcher*/

goog.require('org.apache.royale.core.IBead');



/**
 * @constructor
 * @implements {org.apache.royale.core.IBead}
 */
org.apache.royale.core.Bead = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.Bead', org.apache.royale.core.Bead);


/**
 * @protected
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.core.Bead.prototype._strand;


/**
 * Helper function to attach event listener without the need for casting
 * @royaleignorecoercion org.apache.royale.events.IEventDispatcher
 * @protected
 * @param {string} eventType
 * @param {Function} handler
 * @param {boolean=} capture
 */
org.apache.royale.core.Bead.prototype.listenOnStrand = function(eventType, handler, capture) {
  capture = typeof capture !== 'undefined' ? capture : false;
  this._strand.addEventListener(eventType, handler, capture);
};


org.apache.royale.core.Bead.prototype.set__strand = function(value) {
  this._strand = value;
};


Object.defineProperties(org.apache.royale.core.Bead.prototype, /** @lends {org.apache.royale.core.Bead.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: org.apache.royale.core.Bead.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.Bead.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Bead', qName: 'org.apache.royale.core.Bead', kind: 'class' }], interfaces: [org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.Bead.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.core.Bead'}
      };
    },
    methods: function () {
      return {
        'Bead': { type: '', declaredBy: 'org.apache.royale.core.Bead'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.core.Bead.prototype.ROYALE_COMPILE_FLAGS = 10;
